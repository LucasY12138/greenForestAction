name: Refresh Queue System (with login)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'  # 每天香港 00:00（UTC 16:00）自动触发

jobs:
  call-api-with-auth:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq (for parsing JSON)
        run: sudo apt-get install -y jq

      - name: Login to get jwtToken
        id: login
        run: |
          RESPONSE=$(curl -s -X POST https://greenforestimage.com/api/Users/authenticate-by-loginname \
            -H "Content-Type: application/json" \
            -d '{"loginName":"${{ secrets.API_LOGINNAME }}","password":"${{ secrets.API_PASSWORD }}"}')

          echo "Login response: $RESPONSE"
          TOKEN=$(echo "$RESPONSE" | jq -r .data.jwtToken)
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "❌ Failed to get jwtToken"
            exit 1
          fi
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      # - name: Call deleteAll API
      #   run: |
      #     curl -s -X POST "https://greenforestimage.com/api/BOOKINGS/queues/deleteAll?DeletePermanently=true" \
      #       -H "Authorization: Bearer ${{ steps.login.outputs.token }}" \
      #       -d ''

      - name: Reset all queue types
        run: |
          # 1. 先呼叫 search 接口，獲取所有 queueTypeGuid
          SEARCH_RESP=$(curl -s -X GET https://greenforestimage.com/api/BOOKINGS/queues/types/search \
            -H "Authorization: Bearer ${{ steps.login.outputs.token }}" \
            -H "Content-Type: application/json")

          echo "Search response: $SEARCH_RESP"

          # 2. 用 jq 提取所有 GUID
          GUIDS=$(echo "$SEARCH_RESP" \
            | jq -r '.data.types[].queueTypeGuid')

          if [ -z "$GUIDS" ]; then
            echo "❌ No queueTypeGuid found"
            exit 1
          fi

          # 3. 循環對每個 GUID 執行 update
          for GUID in $GUIDS; do
            echo "Updating queueTypeGuid: $GUID"
            curl -s -X POST "https://greenforestimage.com/api/BOOKINGS/queues/types/update/${GUID}" \
              -H "Authorization: Bearer ${{ steps.login.outputs.token }}" \
              -H "Content-Type: application/json" \
              -d '{"nextTicketNo":1,"lastCalledNo":"000"}' \
              || echo "⚠️ Failed to update $GUID"
          done
